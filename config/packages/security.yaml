security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        our_db_provider:
            entity:
                class: 'App\Entity\Utilisateur'
                property: 'email'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            provider: our_db_provider
            form_login:
                login_path: app_login
                check_path: app_login
                

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/hub, roles: [ROLE_USER, ROLE_INVITE] }
        - { path: ^/parties, roles: [ROLE_USER, ROLE_INVITE] }
        - { path: /parties/creation, roles: ROLE_USER }
        - { path: /parametres$, roles: ROLE_USER }
        - { path: ^/parties/supression, roles: ROLE_USER }
        - { path: ^/plateaux, roles: ROLE_USER }
        - { path: ^/compte, roles: ROLE_USER }
        - { path: ^/api, roles: [ROLE_USER, ROLE_INVITE] }

    encoders:
        # use your user class name here
        App\Entity\Utilisateur: 
            algorithm: bcrypt
            cost: 10
            # Use native password encoder
            # This value auto-selects the best possible hashing algorithm
            # (i.e. Sodium when available).
